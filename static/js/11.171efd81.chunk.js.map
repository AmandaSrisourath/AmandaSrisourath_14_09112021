{"version":3,"sources":["pages/employeeList/components/EmployeeTable.js"],"names":["defaultTheme","createTheme","useStyles","makeStyles","theme","createStyles","root","padding","spacing","justifyContent","display","alignItems","flexWrap","textField","breakpoints","down","width","marginRight","borderBottom","palette","divider","QuickSearchToolbar","props","classes","className","variant","value","onChange","placeholder","InputProps","startAdornment","fontSize","endAdornment","title","size","style","visibility","onClick","clearSearch","EmployeeTable","employeeList","useSelector","state","employee","list","columns","columnsList","React","useState","searchText","setSearchText","rows","setRows","pageSize","setPageSize","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","filter","row","Object","keys","some","field","test","toString","useEffect","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination","autoHeight","components","Toolbar","componentsProps","toolbar","event","target"],"mappings":"qPAcA,IAAMA,EAAeC,cACfC,EAAYC,aACd,SAACC,GAAD,aACIC,YAAa,CACTC,KAAM,CACFC,QAASH,EAAMI,QAAQ,GAAK,GAAK,GACjCC,eAAgB,gBAChBC,QAAS,OACTC,WAAY,aACZC,SAAU,QAEdC,WAAS,mBACJT,EAAMU,YAAYC,KAAK,MAAQ,CAC5BC,MAAO,SAFN,uBAIGZ,EAAMI,QAAQ,EAAG,GAAK,MAJzB,cAKL,qBAAsB,CAClBS,YAAab,EAAMI,QAAQ,MAN1B,cAQL,+BAAgC,CAC5BU,aAAa,aAAD,OAAed,EAAMe,QAAQC,WATxC,OAajB,CAAEpB,iBAGN,SAASqB,EAAmBC,GACxB,IAAMC,EAAUrB,IAEhB,OACI,qBAAKsB,UAAWD,EAAQjB,KAAxB,SACI,cAAC,IAAD,CACImB,QAAQ,WACRC,MAAOJ,EAAMI,MACbC,SAAUL,EAAMK,SAChBC,YAAY,eACZJ,UAAWD,EAAQV,UACnBgB,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAYC,SAAS,UACrCC,aACI,cAAC,IAAD,CACIC,MAAM,QACN,aAAW,QACXC,KAAK,QACLC,MAAO,CAAEC,WAAYd,EAAMI,MAAQ,UAAY,UAC/CW,QAASf,EAAMgB,YALnB,SAOI,cAAC,IAAD,CAAWP,SAAS,iBAqDjCQ,UA5Cf,WACI,IAAMC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QACrDC,EAAUJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASG,eACtD,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBH,IAAMC,SAASR,GAAvC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAgCL,IAAMC,SAAS,GAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAgB,SAACC,GACnBN,EAAcM,GACd,IAAMC,EAAc,IAAIC,OAAoBF,EArEnCG,QAAQ,2BAA4B,QAqEa,KACpDC,EAAepB,EAAaqB,QAAO,SAACC,GACtC,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAACC,GAC1B,OAAOT,EAAYU,KAAKL,EAAII,GAAOE,kBAG3ChB,EAAQQ,IAOZ,OAJAb,IAAMsB,WAAU,WACZjB,EAAQZ,KACT,CAACA,IAGA,cAAC,IAAD,CACIa,SAAUA,EACViB,iBAAkB,SAACC,GAAD,OAAiBjB,EAAYiB,IAC/CC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,YAAU,EACVC,YAAU,EACVC,WAAY,CAAEC,QAASvD,GACvB8B,KAAMA,EACNN,QAASA,EACTgC,gBAAiB,CACbC,QAAS,CACLpD,MAAOuB,EACPtB,SAAU,SAACoD,GAAD,OACNxB,EAAcwB,EAAMC,OAAOtD,QAC/BY,YAAa,kBAAMiB,EAAc","file":"static/js/11.171efd81.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport TextField from \"@mui/material/TextField\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nfunction escapeRegExp(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nconst defaultTheme = createTheme();\nconst useStyles = makeStyles(\n    (theme) =>\n        createStyles({\n            root: {\n                padding: theme.spacing(0.5, 0.5, 0),\n                justifyContent: 'space-between',\n                display: 'flex',\n                alignItems: 'flex-start',\n                flexWrap: 'wrap',\n            },\n            textField: {\n                [theme.breakpoints.down('xs')]: {\n                    width: '100%',\n                },\n                margin: theme.spacing(1, 0.5, 1.5),\n                '& .MuiSvgIcon-root': {\n                    marginRight: theme.spacing(0.5),\n                },\n                '& .MuiInput-underline:before': {\n                    borderBottom: `1px solid ${theme.palette.divider}`,\n                },\n            },\n        }),\n    { defaultTheme },\n);\n\nfunction QuickSearchToolbar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                variant=\"standard\"\n                value={props.value}\n                onChange={props.onChange}\n                placeholder=\"Searchâ€¦\"\n                className={classes.textField}\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize=\"small\" />,\n                    endAdornment: (\n                        <IconButton\n                            title=\"Clear\"\n                            aria-label=\"Clear\"\n                            size=\"small\"\n                            style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                            onClick={props.clearSearch}\n                        >\n                            <ClearIcon fontSize=\"small\" />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nfunction EmployeeTable() {\n    const employeeList = useSelector((state) => state.employee.list);\n    const columns = useSelector((state) => state.employee.columnsList);\n    const [searchText, setSearchText] = React.useState('');\n    const [rows, setRows] = React.useState(employeeList);\n    const [pageSize, setPageSize] = React.useState(5);\n\n    const requestSearch = (searchValue) => {\n        setSearchText(searchValue);\n        const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n        const filteredRows = employeeList.filter((row) => {\n            return Object.keys(row).some((field) => {\n                return searchRegex.test(row[field].toString());\n            });\n        });\n        setRows(filteredRows);\n    };\n\n    React.useEffect(() => {\n        setRows(employeeList);\n    }, [employeeList]);\n\n    return (\n        <DataGrid\n            pageSize={pageSize}\n            onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n            rowsPerPageOptions={[5, 10, 15]}\n            pagination\n            autoHeight\n            components={{ Toolbar: QuickSearchToolbar }}\n            rows={rows}\n            columns={columns}\n            componentsProps={{\n                toolbar: {\n                    value: searchText,\n                    onChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n                        requestSearch(event.target.value),\n                    clearSearch: () => requestSearch(''),\n                },\n            }}\n        />\n    );\n}\n\nexport default EmployeeTable;"],"sourceRoot":""}